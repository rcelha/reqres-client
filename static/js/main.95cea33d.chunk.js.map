{"version":3,"sources":["components/UserList.js","services.js","containers/UserList.js","components/UserDetails.js","containers/UserDetails.js","components/EditUser.js","store.js","serviceWorker.js","index.js","App.js"],"names":["UserList","_ref","users","_ref$loadMoreDisabled","loadMoreDisabled","onLoadMoreClick","react_default","a","createElement","Box","display","flexDirection","List","map","user","ListItem","button","key","id","component","Link","to","concat","ListItemAvatar","Avatar","src","avatar","ListItemText","email","Button","fullWidth","color","disabled","onClick","list","_list","Object","asyncToGenerator","regenerator_default","mark","_callee","params","resp","_resp$data","data","meta","wrap","_context","prev","next","Axios","get","sent","objectWithoutProperties","abrupt","stop","_x","apply","this","arguments","_get","_callee2","_resp$data2","_context2","delay","_x2","_list2","_callee3","_resp$data3","_context3","connect","state","props","usersRes","getFrom","page","totalPages","dispatch","loadUsers","listResources","append","stateProps","dispatchProps","ownProps","objectSpread","loading","useEffect","error","UserDetails","_ref$loading","first_name","last_name","Card","CardActionArea","CircularProgress","CardMedia","height","image","alt","title","CardContent","Typography","gutterBottom","variant","CardActions","size","match","loadUser","fetchResource","assign","EditUser","htmlFor","style","placeholder","type","className","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","rootReducer","length","undefined","resources","applyMiddleware","run","resourceSaga","Boolean","location","hostname","ReactDOM","render","es","store","react_router_dom","width","flexGrow","containers_UserList","react_router","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95cea33d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar\n} from \"@material-ui/core\";\n\nexport default ({ users, loadMoreDisabled = false, onLoadMoreClick }) => (\n  <Box display=\"flex\" flexDirection=\"column\">\n    <Box>\n      <List>\n        {users.map(user => (\n          <ListItem\n            button\n            key={user.id}\n            component={Link}\n            to={`/users/${user.id}/`}\n          >\n            <ListItemAvatar>\n              <Avatar src={user.avatar} />\n            </ListItemAvatar>\n            <ListItemText>{user.email}</ListItemText>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n    <Box>\n      <Button\n        fullWidth\n        color=\"secondary\"\n        disabled={loadMoreDisabled}\n        onClick={onLoadMoreClick}\n      >\n        Load more...\n      </Button>\n    </Box>\n  </Box>\n);\n","import Axios from \"axios\";\nexport const users = {\n  list: async params => {\n    const resp = await Axios.get(\"https://reqres.in/api/users\", {\n      params\n    });\n    const { data, ...meta } = resp.data;\n    return { data, meta };\n  },\n  get: async ({ id }) => {\n    const resp = await Axios.get(`https://reqres.in/api/users/${id}`, {\n      params: { delay: 3 }\n    });\n    const { data, ...meta } = resp.data;\n    return { data, meta };\n  }\n};\n\nexport const colours = {\n  list: async params => {\n    const resp = await Axios.get(\"https://reqres.in/api/colours\", {\n      params\n    });\n    const { data, ...meta } = resp.data;\n    return { data, meta };\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { listResources, getFrom } from \"reresource\";\nimport { get } from \"lodash\";\n\nimport UserList from \"../components/UserList\";\nimport { users } from \"../services\";\nimport { useEffect } from \"react\";\n\nconst UserListContainer = props => {\n  const { loadUsers } = props;\n  useEffect(() => {\n    loadUsers();\n  }, [loadUsers]);\n\n  if (props.usersRes.error) return <div>Error</div>;\n\n  return <UserList {...props} />;\n};\n\nfunction mapStateToProps(state, props) {\n  const usersRes = getFrom(state, \"users\");\n  const users = usersRes.data || [];\n  const page = get(usersRes.meta, \"page\", 0);\n  const totalPages = get(usersRes.meta, \"total_pages\", 0);\n  return {\n    usersRes,\n    users,\n    page,\n    totalPages\n  };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    loadUsers: page =>\n      dispatch(listResources(\"users\", users.list, { page }, { append: true }))\n  };\n}\n\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\n  return {\n    ...stateProps,\n    ...dispatchProps,\n    ...ownProps,\n    loadMoreDisabled:\n      stateProps.page === stateProps.totalPages || stateProps.usersRes.loading,\n    onLoadMoreClick: () => {\n      dispatchProps.loadUsers(stateProps.usersRes.meta.page + 1);\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(UserListContainer);\n","import React from \"react\";\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  CircularProgress\n} from \"@material-ui/core\";\n\nexport default ({ loading = false, email, first_name, last_name, avatar }) => (\n  <Card>\n    <CardActionArea>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <CardMedia\n          component=\"img\"\n          height=\"140\"\n          image={avatar}\n          alt={`${last_name}'s avatar`}\n          title={`${last_name}'s avatar`}\n        />\n      )}\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {last_name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {first_name} {last_name} ({email})\n        </Typography>\n      </CardContent>\n    </CardActionArea>\n    <CardActions>\n      <Button size=\"small\" color=\"primary\">\n        Share\n      </Button>\n      <Button size=\"small\" color=\"primary\">\n        Learn More\n      </Button>\n    </CardActions>\n  </Card>\n);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchResource, getFrom } from \"reresource\";\n\nimport UserDetails from \"../components/UserDetails\";\nimport { users } from \"../services\";\n\nconst UserDetailsContainer = ({ loadUser, id, user }) => {\n  useEffect(() => {\n    loadUser(id);\n  }, [id, loadUser]);\n\n  if (user.error) return <div>Error</div>;\n\n  return <UserDetails {...user.data} loading={user.loading} />;\n};\n\nfunction mapStateToProps(state, props) {\n  const id = props.match.params.id;\n  const user = getFrom(state, \"users\", id);\n  return {\n    id,\n    user\n  };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return { loadUser: id => dispatch(fetchResource(\"users\", users.get, id)) };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserDetailsContainer);\n","import React from \"react\";\n\nexport default props => (\n  <form>\n    <label htmlFor=\"email\" style={{ display: \"block\" }}>\n      Email\n    </label>\n    <input id=\"email\" placeholder=\"Enter your email\" type=\"text\" />\n    <button type=\"button\" className=\"outline\">\n      Reset\n    </button>\n    <button type=\"submit\">Submit</button>\n  </form>\n);\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport { reducer as resources, saga as resourceSaga } from \"reresource\";\nimport createSagaMiddleware from \"redux-saga\";\n\nfunction rootReducer(state = {}, action) {\n  return state;\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nexport default createStore(\n  combineReducers({ rootReducer, resources }),\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(resourceSaga);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Box, Button } from \"@material-ui/core\";\nimport UserList from \"./containers/UserList\";\nimport UserDetails from \"./containers/UserDetails\";\nimport EditUser from \"./components/EditUser\";\n// import UserList from \"./containers/UserQuery\";\n\nexport default () => {\n  return (\n    <Router>\n      <div style={{ width: \"100%\" }}>\n        <Box display=\"flex\">\n          <Box display=\"flex\" flexDirection=\"column\">\n            <Box>\n              <Button fullWidth color=\"primary\" component={Link} to=\"/users/\">\n                Add user\n              </Button>\n            </Box>\n            <Box flexGrow={1}>\n              <UserList />\n            </Box>\n          </Box>\n          <Box flexGrow={1}>\n            <Route path=\"/\" exact component={() => <div />} />\n            <Route path=\"/users/\" exact component={EditUser} />\n            <Route path=\"/users/:id\" component={UserDetails} />\n          </Box>\n        </Box>\n      </div>\n    </Router>\n  );\n};\n"],"sourceRoot":""}